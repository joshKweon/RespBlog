{"ast":null,"code":"import * as api from \"../api\";\nimport { FETCH_ALL_STORIES, CREATE_STORY, UPDATE_STORY, DELETE_STORY } from \"../constants/actionTypes\";\nexport const getStories = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStories();\n    dispatch({\n      type: FETCH_ALL_STORIES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createStory = story => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createStory(story);\n    dispatch({\n      type: CREATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updateStory = (id, story) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateStory(id, story);\n    dispatch({\n      type: UPDATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deleteStory = id => async dispatch => {\n  try {\n    await api.deleteStory(id);\n    dispatch({\n      type: DELETE_STORY,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likeStory = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeStory(id);\n    dispatch({\n      type: UPDATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/sj2/Downloads/Mern-Stack-Project-main/client/src/actions/stories.jsx"],"names":["api","FETCH_ALL_STORIES","CREATE_STORY","UPDATE_STORY","DELETE_STORY","getStories","dispatch","data","fetchStories","type","payload","error","console","log","message","createStory","story","updateStory","id","deleteStory","likeStory"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SACIC,iBADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,YAJJ,QAKO,0BALP;AAOA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACQ,YAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,iBAAR;AAA2BS,MAAAA,OAAO,EAAEH;AAApC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACe,WAAJ,CAAgBC,KAAhB,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,YAAR;AAAsBQ,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,CAACC,EAAD,EAAKF,KAAL,KAAe,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACiB,WAAJ,CAAgBC,EAAhB,EAAoBF,KAApB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,YAAR;AAAsBO,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CARM;AAUP,OAAO,MAAMK,WAAW,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACnD,MAAI;AACA,UAAMN,GAAG,CAACmB,WAAJ,CAAgBD,EAAhB,CAAN;AAEAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL,YAAR;AAAsBM,MAAAA,OAAO,EAAEQ;AAA/B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOP,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CARM;AAUP,OAAO,MAAMM,SAAS,GAAIF,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACjD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,GAAG,CAACoB,SAAJ,CAAcF,EAAd,CAAvB;AAEAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,YAAR;AAAsBO,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CARM","sourcesContent":["import * as api from \"../api\";\nimport {\n    FETCH_ALL_STORIES,\n    CREATE_STORY,\n    UPDATE_STORY,\n    DELETE_STORY\n} from \"../constants/actionTypes\";\n\nexport const getStories = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchStories();\n        dispatch({ type: FETCH_ALL_STORIES, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const createStory = (story) => async (dispatch) => {\n    try {\n        const { data } = await api.createStory(story);\n        dispatch({ type: CREATE_STORY, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const updateStory = (id, story) => async (dispatch) => {\n    try {\n        const { data } = await api.updateStory(id, story);\n\n        dispatch({ type: UPDATE_STORY, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const deleteStory = (id) => async (dispatch) => {\n    try {\n        await api.deleteStory(id);\n\n        dispatch({ type: DELETE_STORY, payload: id });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const likeStory = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likeStory(id);\n\n        dispatch({ type: UPDATE_STORY, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n"]},"metadata":{},"sourceType":"module"}