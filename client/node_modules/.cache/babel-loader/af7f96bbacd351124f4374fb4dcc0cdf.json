{"ast":null,"code":"var _jsxFileName = \"/Users/sj2/Downloads/Mern-Stack-Project-main/client/src/components/Story/Story.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Tooltip, Typography, Image } from \"antd\";\nimport { EditOutlined, DeleteTwoTone, HeartTwoTone } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport moment from 'moment';\nimport styles from './styles';\nimport { deleteStory, likeStory } from '../../actions/stories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst {\n  Link,\n  Paragraph,\n  Text\n} = Typography;\n\nfunction Story(_ref) {\n  _s();\n\n  var _user$result;\n\n  let {\n    story,\n    setSelectedId\n  } = _ref;\n  const dispatch = useDispatch();\n  const [expand, setExpand] = useState(true);\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const cardActions = [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.actions,\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"top\",\n      title: \"Like\",\n      color: \"magenta\",\n      onClick: () => {\n        dispatch(likeStory(story._id));\n      },\n      children: [/*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"\\xA0 \", story.likes.length, \" \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: \"Edit\",\n    children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n      onClick: () => {\n        setSelectedId(story._id);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: \"Delete\",\n    color: \"red\",\n    children: /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n      twoToneColor: \"red\",\n      onClick: () => dispatch(deleteStory(story._id))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: styles.card,\n    cover: /*#__PURE__*/_jsxDEV(Image, {\n      src: story.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this),\n    actions: (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id) === (story === null || story === void 0 ? void 0 : story.userId) ? cardActions : user !== null && user !== void 0 && user.result ? cardActions.slice(0, 1) : null,\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: story.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      style: {\n        margin: 0\n      },\n      ellipsis: {\n        rows: 2,\n        expandable: true,\n        symbol: \"more\",\n        onExpand: () => {\n          setExpand(true);\n        },\n        onEllipsis: () => {\n          setExpand(false);\n        }\n      },\n      children: story.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), expand ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"#\",\n      children: story.tags.split(\" \").map(tag => `#${tag} `)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"secondary\",\n      children: moment(story.postDate).fromNow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Story, \"5CkP8AJCO6/OJqRz4Iz4Cbtxkgg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Story;\nexport default Story;\n\nvar _c;\n\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"sources":["/Users/sj2/Downloads/Mern-Stack-Project-main/client/src/components/Story/Story.jsx"],"names":["React","useState","Card","Tooltip","Typography","Image","EditOutlined","DeleteTwoTone","HeartTwoTone","useDispatch","moment","styles","deleteStory","likeStory","Meta","Link","Paragraph","Text","Story","story","setSelectedId","dispatch","expand","setExpand","user","JSON","parse","localStorage","getItem","cardActions","actions","_id","likes","length","card","image","result","userId","slice","username","margin","rows","expandable","symbol","onExpand","onEllipsis","caption","tags","split","map","tag","postDate","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Tooltip, Typography, Image } from \"antd\";\nimport { EditOutlined, DeleteTwoTone, HeartTwoTone } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport moment from 'moment';\nimport styles from './styles';\nimport { deleteStory, likeStory } from '../../actions/stories';\n\nconst { Meta } = Card;\nconst { Link, Paragraph, Text } = Typography;\n\nfunction Story({ story, setSelectedId }) {\n  const dispatch = useDispatch();\n  const [expand, setExpand] = useState(true);\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  const cardActions = [\n    <div style={styles.actions}>\n      <Tooltip\n        placement='top'\n        title='Like'\n        color='magenta'\n        onClick={() => { dispatch(likeStory(story._id)) }}\n      >\n        <HeartTwoTone twoToneColor=\"magenta\" />\n        &nbsp; {story.likes.length} &nbsp;\n      </Tooltip>\n    </div>,\n    <Tooltip\n      placement='top'\n      title='Edit'\n    >\n      <EditOutlined onClick={() => {\n        setSelectedId(story._id);\n      }} />\n    </Tooltip>,\n    <Tooltip\n      placement='top'\n      title='Delete'\n      color='red'\n    >\n      <DeleteTwoTone twoToneColor=\"red\" onClick={() => dispatch(deleteStory(story._id))} />\n    </Tooltip>\n  ];\n\n  return (\n    <Card\n      style={styles.card}\n      cover={<Image src={story.image} />}\n      actions={\n        user?.result?._id === story?.userId ?\n          cardActions :\n          user?.result ?\n            cardActions.slice(0, 1)\n            : null\n      }\n    >\n      <Meta title={story.username} />\n      <Paragraph\n        style={{ margin: 0 }}\n        ellipsis={{\n          rows: 2,\n          expandable: true,\n          symbol: \"more\",\n          onExpand: () => {\n            setExpand(true);\n          },\n          onEllipsis: () => {\n            setExpand(false);\n          }\n        }}\n      >\n        {story.caption}\n      </Paragraph>\n      {expand ?\n        <Link href=\"#\">{story.tags.split(\" \").map((tag) => `#${tag} `)}</Link>\n        : null }\n        <br />\n        <Text type=\"secondary\">{moment(story.postDate).fromNow()}</Text>\n    </Card>\n  )\n}\n\nexport default Story"]},"metadata":{},"sourceType":"module"}