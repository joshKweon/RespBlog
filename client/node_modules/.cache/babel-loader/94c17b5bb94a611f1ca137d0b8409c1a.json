{"ast":null,"code":"import _slicedToArray from\"/Users/sj2/gitDesk/RespBlog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{Form,Input,Button,Card,Layout,Typography}from\"antd\";import{UserOutlined,LockOutlined,MailOutlined}from\"@ant-design/icons\";import{useDispatch}from'react-redux';import{login,signup}from'../../actions/authentication';import styles from'./styles';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Title=Typography.Title;function AuthForm(){var user=null;var navigate=useNavigate();var dispatch=useDispatch();var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var onSubmit=function onSubmit(formValues){if(isLogin){dispatch(login(formValues,navigate));}else{dispatch(signup(formValues,navigate));}};var switchMode=function switchMode(){setIsLogin(function(prevIsLogin){return!prevIsLogin;});};return/*#__PURE__*/_jsx(Layout,{style:styles.container,children:/*#__PURE__*/_jsx(Card,{style:styles.card,title:/*#__PURE__*/_jsxs(Title,{level:4,style:{textAlign:\"center\"},children:[isLogin?\"Login to\":\"Join\",\" Instaverse\"]}),children:/*#__PURE__*/_jsxs(Form,{name:\"authform\",form:form,size:\"large\",wrapperCol:{span:20,offset:2},onFinish:onSubmit,children:[isLogin||/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Form.Item,{name:\"username\",rules:[{required:true,message:\"Please enter your username\"}],children:/*#__PURE__*/_jsx(Input,{prefix:/*#__PURE__*/_jsx(UserOutlined,{}),placeholder:\"username\"})})}),/*#__PURE__*/_jsx(Form.Item,{name:\"email\",rules:[{required:true,message:\"Please enter valid email address\"}],children:/*#__PURE__*/_jsx(Input,{type:\"email\",prefix:/*#__PURE__*/_jsx(MailOutlined,{}),placeholder:\"email address\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",rules:[{required:true,message:\"Please enter your password\"}],children:/*#__PURE__*/_jsx(Input.Password,{type:\"password\",prefix:/*#__PURE__*/_jsx(LockOutlined,{}),placeholder:\"password\"})}),isLogin||/*#__PURE__*/_jsx(Form.Item,{name:\"confirmPassword\",rules:[{required:true,message:\"Please repeat your password\"}],children:/*#__PURE__*/_jsx(Input.Password,{type:\"password\",prefix:/*#__PURE__*/_jsx(LockOutlined,{}),placeholder:\"Confirm Password\"})}),/*#__PURE__*/_jsxs(Form.Item,{children:[/*#__PURE__*/_jsx(Button,{htmlType:\"submit\",typeof:\"primary\",children:isLogin?\"Log In\":\"Join\"}),/*#__PURE__*/_jsx(\"span\",{style:{margin:\"0 10px 0px 20px\"},children:\"Or\"}),/*#__PURE__*/_jsx(Button,{type:\"link\",onClick:switchMode,children:isLogin?\"Register now\":\"have an account?\"})]})]})})});}export default AuthForm;","map":{"version":3,"sources":["/Users/sj2/gitDesk/RespBlog/client/src/components/AuthForm/AuthForm.jsx"],"names":["React","useState","useNavigate","Form","Input","Button","Card","Layout","Typography","UserOutlined","LockOutlined","MailOutlined","useDispatch","login","signup","styles","Title","AuthForm","user","navigate","dispatch","useForm","form","isLogin","setIsLogin","onSubmit","formValues","switchMode","prevIsLogin","container","card","textAlign","span","offset","required","message","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from 'react-redux';\nimport { login, signup } from '../../actions/authentication';\n\nimport styles from './styles';\n\nconst { Title } = Typography;\n\nfunction AuthForm() {\n    const user = null;\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const [form] = Form.useForm();\n    const [isLogin, setIsLogin] = useState(true);\n\n    const onSubmit = (formValues) => {\n        if (isLogin) {\n            dispatch(login(formValues, navigate));\n        } else {\n            dispatch(signup(formValues, navigate));\n        }\n    };\n\n    const switchMode = () => {\n        setIsLogin(prevIsLogin => !prevIsLogin);\n    };\n\n    return (\n        <Layout style={styles.container}>\n            <Card\n                style={styles.card}\n                title={\n                    <Title level={4} style={{ textAlign: \"center\" }}>\n                        { isLogin ? \"Login to\" : \"Join\" } Instaverse\n                    </Title>\n                }\n            >\n                <Form\n                    name=\"authform\"\n                    form={form}\n                    size=\"large\"\n                    wrapperCol={{ span: 20, offset: 2 }}\n                    onFinish={onSubmit}\n                >\n                    {isLogin || (\n                        <>\n                            <Form.Item\n                                name=\"username\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please enter your username\"\n                                    }\n                                ]}\n                            >\n                                <Input prefix={<UserOutlined />} placeholder=\"username\" />\n                            </Form.Item>\n                        </>\n                    )}\n                    <Form.Item\n                        name=\"email\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please enter valid email address\"\n                            }\n                        ]}\n                    >\n                        <Input type=\"email\" prefix={<MailOutlined />} placeholder=\"email address\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please enter your password\"\n                            }\n                        ]}\n                    >\n                        <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"password\" />\n                    </Form.Item>\n                    {isLogin || (\n                        <Form.Item\n                            name=\"confirmPassword\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please repeat your password\"\n                                }\n                            ]}\n                        >\n                            <Input.Password type=\"password\" prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\n                        </Form.Item>\n                    )}\n                    <Form.Item>\n                        <Button htmlType='submit' typeof='primary'>\n                            {isLogin ? \"Log In\" : \"Join\" }\n                        </Button>\n                        <span style={{ margin: \"0 10px 0px 20px\" }}>Or</span>\n                        <Button type='link' onClick={switchMode}>\n                            {isLogin ? \"Register now\" : \"have an account?\"}\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </Layout>\n    )\n}\n\nexport default AuthForm"]},"metadata":{},"sourceType":"module"}